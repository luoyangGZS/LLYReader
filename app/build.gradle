plugins {
    id 'com.android.application'
    id 'org.greenrobot.greendao'
}


//声明 获取签名配置 配置文件路径
def signProperties = rootProject.file("sign/keystore.properties")
def props = new Properties()
props.load(new FileInputStream(signProperties))
def file = file(props['storeFile'])

android {

    signingConfigs {
        release {
            //如果秘钥库文件和配置文件存在就签名，否则不签名
            if (file.exists() && signProperties.exists()) {
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
                storeFile file
                storePassword props['storePassword']
            }
        }
    }


    compileSdk 32

    defaultConfig {
        applicationId "com.luoyang.llyreader"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "2.0.1"
        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //使用签名文件
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        //本地开发环境
        dev {
            buildConfigField 'String', 'ENVIRONMENT', '"develop"'
            buildConfigField 'String', 'BASE_IP', '"https://www.baidu.com"'
        }

        //生产环境
        pro {
            buildConfigField 'String', 'ENVIRONMENT', '"product"'
            buildConfigField 'String', 'BASE_IP', '"https://www.baidu.com"'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith(".apk")) {
                if (variant.buildType.name == "release") {
                    outputFileName = "llyReader_v" + defaultConfig.versionName + ".apk"
                } else {
                    outputFileName = "llyReader_v" + defaultConfig.versionName + "_" + variant.buildType.name + ".apk"
                }
            }
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':basemvp')
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //GreenDao 一款用于数据库创建与管理的框架，
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'


    //AutofitTextView 根据字长自适应
    implementation 'me.grantland:autofittextview:0.2.1'


    //Glide 流畅图片加载
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    // rxjava 观察者模式
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    //Rxbus
    implementation('com.hwangjr.rxbus:rxbus:3.0.0') {
                exclude group: 'com.jakewharton.timber', module: 'timber'
            }

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //旋转加载视图View控件-智能按钮-下载不了了
//    implementation 'com.victor:lib:1.0.4'

}
greendao {
    schemaVersion 1  //版本
    daoPackage 'com.luoyang.llyreader.dao' // 一般为app包名+生成文件的文件夹名
    targetGenDir 'src/main/java' //生成文件路径
}
